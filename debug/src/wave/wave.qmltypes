import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "lyrics.h"
        name: "LyricSentence"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["wave/LyricSentence 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "startTime"
            type: "double"
            read: "getStartTime"
            write: "setStartTime"
            notify: "startTimeChanged"
            index: 0
        }
        Property {
            name: "endTime"
            type: "double"
            read: "getEndTime"
            write: "setEndTime"
            notify: "endTimeChanged"
            index: 1
        }
        Property {
            name: "sentence"
            type: "QString"
            read: "getSentence"
            write: "setSentence"
            notify: "sentenceChanged"
            index: 2
        }
        Signal { name: "startTimeChanged" }
        Signal { name: "endTimeChanged" }
        Signal { name: "sentenceChanged" }
        Method { name: "getStartTime"; type: "double" }
        Method { name: "getEndTime"; type: "double" }
        Method { name: "getSentence"; type: "QString" }
        Method {
            name: "setStartTime"
            Parameter { name: "newTime"; type: "double" }
        }
        Method {
            name: "setEndTime"
            Parameter { name: "newTime"; type: "double" }
        }
        Method {
            name: "setSentence"
            Parameter { name: "newSentence"; type: "QString" }
        }
    }
    Component {
        file: "lyrics.h"
        name: "LyricsData"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["wave/LyricsData 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "sentences"
            type: "LyricSentence"
            isList: true
            read: "getSentences"
            notify: "lyricsChange"
            index: 0
            isReadonly: true
        }
        Signal { name: "lyricsChange" }
        Method { name: "clearLyricSentence" }
        Method {
            name: "pushLyricSentence"
            Parameter { name: "sentence"; type: "LyricSentence"; isPointer: true }
        }
        Method { name: "pushLyricSentenceCompleted" }
    }
    Component {
        file: "wave.hpp"
        name: "WaveView"
        accessSemantics: "reference"
        defaultProperty: "data"
        parentProperty: "parent"
        prototype: "QQuickItem"
        exports: ["wave/WaveView 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "radiusRatio"
            type: "float"
            read: "getRadiusRatio"
            write: "setRadiusRatio"
            notify: "notifyRadiusRatio"
            index: 0
        }
        Property { name: "player"; type: "QString"; read: "getPlayer"; write: "setPlayer"; index: 1 }
        Property {
            name: "lyricsDataName"
            type: "QString"
            read: "getLyricsDataName"
            write: "setLyricsDataName"
            index: 2
        }
        Signal {
            name: "signalPushLyricSentence"
            Parameter { name: "lyricSentence"; type: "LyricSentence"; isPointer: true }
        }
        Signal { name: "signalClearLyricSentence" }
        Signal { name: "notifyRadiusRatio" }
        Signal { name: "signalPushLyricSentenceCompleted" }
        Method {
            name: "setRadiusRatio"
            Parameter { name: "radiusRatio"; type: "float" }
        }
        Method {
            name: "readLyricsResponse"
            Parameter { name: "lyrics"; type: "std::shared_ptr<lrc::Lyrics>" }
        }
        Method {
            name: "readLyrics"
            type: "bool"
            Parameter { name: "filePath"; type: "QString" }
        }
        Method {
            name: "tryLoadLyrics"
            type: "bool"
            Parameter { name: "filePath"; type: "QString" }
        }
        Method { name: "getRadiusRatio"; type: "float" }
    }
}
